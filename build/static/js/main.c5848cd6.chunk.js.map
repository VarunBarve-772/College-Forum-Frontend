{"version":3,"sources":["Images/otp_send.gif","Components/RegisterUser/RegisterOTP.js","Components/RegisterUser/RegistrationForm.js","Components/RegisterUser/Register.js","Components/Login.js","Components/CommonFiles/ShowQuestions.js","Components/Home/Category.js","Components/CommonFiles/Navbar.js","Components/Home/Home.js","Components/About-us.js","Components/Contact-us.js","Components/Ques&Ans/Askques.js","Images/c1.png","Images/c2.png","Images/c3.png","Components/front.js","Components/Profile/ViewProfile.js","Components/Profile/UpdateProfile.js","Components/Profile/ChangePassword.js","Components/Profile/Profile.js","Components/Forgetpassword/ResetPass.js","Components/Forgetpassword/ForgetOTP.js","Components/Forgetpassword/Username.js","Components/Forgetpassword/ForgetPassword.js","Components/Ques&Ans/AnswerSubmit.js","Components/Ques&Ans/Answers.js","Components/Ques&Ans/Question.js","Components/App.js","index.js"],"names":["RegisterOTP","props","useForm","register","handleSubmit","history","useHistory","useState","otpError","setOtpError","className","onSubmit","data","location","fetch","method","body","JSON","stringify","headers","then","response","json","setUserId","sessionStorage","setItem","btoa","push","alert","type","name","autoFocus","maxLength","size","min","max","pattern","schema","yup","shape","firstName","required","matches","lastName","enrollment","email","password","confirmPassword","oneOf","mobile","institute","year","positive","integer","Form","passwordShown","setPasswordShown","confirmPasswordShown","setConfirmPasswordShown","idCardErrorMessage","setIdCardErrorMessage","usernameError","setUsernameError","userAuthentication","resolver","yupResolver","errors","formState","checkFileFormat","fileList","file","submitForm","a","idCard","convertBase64","base64File","document","getElementById","style","display","setTimeout","setState","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","params","particles","number","value","desity","enable","value_area","color","events","onhover","mode","placeholder","message","onClick","to","id","src","otp_send","alt","Register","state","useEffect","getItem","Login","errorMessage","setErrorMessage","ShowQuestions","questions","setQuestions","questionsList","fetchUrl","questionCategory","map","question","time","date","Category","setCategory","category","category_temp","setQuestionCategory","cursor","Navbar","clear","Home","questionState","setQuestionState","aria-hidden","About","content","ContactUs","Aques","codeState","setCodeState","console","log","codeContent","queContent","defaultValue","Front","data-ride","c3","c1","c2","href","role","data-slide","ViewProfile","userProfile","setUserProfile","UpdateProfile","userProfileData","setUserProfileData","e","target","reset","step","oldPassword","ChangePassword","oldPasswordVisibility","setOldPasswordVisibility","passwordVisibility","setPasswordVisibility","confirmPasswordVisibility","setConfirmPasswordVisibility","oldPasswordErrorMessage","setOldPasswordErrorMessage","togglePasswordVisiblity","parse","Profile","ResetPass","ForgetOTP","Username","ForgetPassword","AnswerSubmit","que_id","setContentReload","contentReload","answerContent","Answers","modalisOpen","setModalIsOpen","tempAnswerId","setTempAnswerId","reportCategoryValue","setReportCategoryValue","answerList","length","answer","answer_id","ans_id","submitSatisfactoryAnswer","Number","satisfactoryAnswer","answerId","code","top","left","right","bottom","marginRight","transform","height","width","isOpen","onChange","event","report","class","Question","questionContent","setQuestionContent","setAnswerList","setSatisfactoryAnswer","tempQuestionId","setTempQuestionId","questionId","satisfactory","questioner","App","userId","path","exact","ReactModal","setAppElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5848cd6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/otp_send.83e17823.gif\";","import React, { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport '../../css/OTP.css';\r\n\r\nconst RegisterOTP = (props) => {\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const history = useHistory();\r\n  const [otpError, setOtpError] = useState('');\r\n\r\n  const onSubmitOTP = function(data) {\r\n    data.location = 'register';\r\n    fetch(\"http://127.0.0.1:8000/authentication/OTP\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n    })\r\n\r\n    // Converting to JSON\r\n    .then(response => response.json())\r\n    \r\n    // Displaying results to console\r\n    .then(json => {\r\n      if(json.response === 'Valid') {\r\n        props.setUserId(json['userId']);\r\n        sessionStorage.setItem('userId', JSON.stringify(json['userId']));\r\n        sessionStorage.setItem('pass', JSON.stringify(btoa(json['pass'])));\r\n        history.push('/Home');\r\n      }else if(json.response === 'Invalid') {\r\n        setOtpError('Invalid OTP');\r\n      } else if (json.response === 'Wrong') {\r\n        alert('Something Went Wrong, Please Try Again!!!');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n    return(\r\n      <div>\r\n          <div className=\"OTP-div\">\r\n\r\n            <h2>Account Verification!</h2>\r\n            <h6> Enter the OTP we sent on Your Email. </h6>\r\n            \r\n            <form onSubmit={handleSubmit(onSubmitOTP)}>\r\n              <input type=\"text\" name=\"otpValue\" {...register('otpValue')} className=\"smsCode\" autoFocus=\"\" maxLength=\"4\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{4}\"/><br/>\r\n\r\n              <button type=\"submit\" className=\"otp_submit_button\">Verify</button><br/>\r\n              <span className=\"error_msg\">{ otpError }</span>\r\n            </form> \r\n          </div>\r\n      </div>       \r\n    );\r\n}\r\nexport default RegisterOTP;","import React,{ useState } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup';\r\nimport '../../css/registration.css';\r\nimport otp_send from '../../Images/otp_send.gif';\r\nimport Particles from 'react-particles-js';\r\nimport RegisterOTP from './RegisterOTP';\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().required(\"This Field is Required\").min(2).max(50).matches(/^[A-Za-z]+((('|-|\\.)?([A-Za-z])+))?$/, \"Please Enter a Valid First Name\"),\r\n    lastName: yup.string().required(\"This Field is Required\").min(2).max(50).matches(/^[A-Za-z]+((('|-|\\.)?([A-Za-z])+))?$/, \"Please Enter a Valid Last Name\"),\r\n    enrollment: yup.string().required(\"This Field is Required\").min(12).max(20),\r\n    email: yup.string().required(\"This Field is Required\").email(\"Please Enter a Valid Email\"),\r\n    password: yup.string().required(\"This Field is Required\").min(8).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\"Please Enter a Valid Password\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\r\n    mobile: yup.string().required(\"This Field is Required\").matches(/^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)$/, \"Please Enter a Valid Mobile Number\"),\r\n    institute: yup.string().required(\"This Field is Required\").max(100).matches(/^[a-zA-Z]+$/, \"Please Enter a Valid Institute\"),\r\n    year: yup.number().required(\"This Field is Required\").positive().integer().min(1).max(5),\r\n})\r\n\r\nfunction Form(props) {\r\n\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const togglePasswordVisiblity = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n\r\n    const [confirmPasswordShown, setConfirmPasswordShown] = useState(false);\r\n    const toggleConfirmPasswordVisiblity = () => {\r\n        setConfirmPasswordShown(confirmPasswordShown ? false : true);\r\n    };\r\n\r\n    const [idCardErrorMessage, setIdCardErrorMessage] = useState(false);\r\n    const [usernameError, setUsernameError] = useState('');\r\n    let userAuthentication = '';\r\n    \r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const checkFileFormat = function(fileList) {\r\n        let file = fileList[0];\r\n        if(file) {\r\n            if(file.type === \"image/jpeg\" || file.type === \"image/jpg\" || file.type === \"image/png\" || file.type === \"application/pdf\") {\r\n                setIdCardErrorMessage(' ')\r\n                return true;\r\n            } else {\r\n                setIdCardErrorMessage('Please Select Valid File Type Only!')\r\n                return false;\r\n            }\r\n        } else {\r\n            setIdCardErrorMessage('Please Select a File')\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n    const submitForm = async (data) => {\r\n        if(checkFileFormat(data.idCard)) {\r\n            let file = data.idCard[0];\r\n            const base64File = await convertBase64(file);\r\n\r\n            data.idCard = base64File;\r\n\r\n            fetch(\"http://127.0.0.1:8000/authentication/registerUser\", {\r\n      \r\n                // Adding method type\r\n                method: \"POST\",\r\n                \r\n                // Adding body or contents to send\r\n                body: JSON.stringify(data),\r\n                \r\n                // Adding headers to the request\r\n                headers: {\r\n                    \"Content-type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            })\r\n      \r\n            // Converting to JSON\r\n            .then(response => response.json())\r\n            \r\n            // Displaying results to console\r\n            .then(json => {\r\n                if (json.response === 'Valid') {\r\n                    userAuthentication = 'Valid';\r\n                } else if (json.response === 'Invalid') {\r\n                    userAuthentication = 'Invalid';\r\n                } else if (json.response === 'Wrong') {\r\n                    alert('Something Went Wrong, Please try Again!!!');\r\n                }\r\n            });\r\n    \r\n            document.getElementById('otp_gif').style.display = 'block';\r\n            setTimeout(() => {\r\n                if (userAuthentication === \"Valid\"){\r\n                    props.setState(<RegisterOTP setState={props.setState}/>)\r\n                } else if(userAuthentication === \"Invalid\") {\r\n                    setUsernameError(\"This Enrollment is already Registered, Please insert correct Enrollment!!!\");\r\n                    document.getElementById('otp_gif').style.display = 'none';\r\n                }\r\n            }, 4000);\r\n        }\r\n    }\r\n\r\n    const convertBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const particlesOptions = {\r\n        particles: {\r\n            number: {\r\n                value: 40,\r\n                desity: {\r\n                    enable: true,\r\n                    value_area: 900\r\n                }\r\n            },\r\n            \r\n            color: {\r\n                value: \"#17242A\"\r\n            },\r\n\r\n            size: {\r\n                value: 4\r\n            },\r\n\r\n            events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"repulse\"\r\n                },\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n    <div>\r\n        <Particles className=\"particles_bg\" params={particlesOptions} />\r\n        <div className=\"register_bg\"></div>\r\n        <form className=\"register_form\" onSubmit={handleSubmit(submitForm)}>\r\n            <h3 className=\"register_heading\">Register</h3>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                    <label>First Name</label>\r\n                    <input type=\"text\" name=\"firstName\" {...register('firstName')} className=\"form-control register_input_style\" placeholder=\"First Name...\"/>\r\n                    <span>{ errors.firstName?.message }</span>\r\n                </div>\r\n\r\n                <div className=\"form-group col\">\r\n                    <label>Last Name</label>\r\n                    <input type=\"text\" name=\"lastName\" {...register('lastName')} className=\"form-control register_input_style\" placeholder=\"last Name...\"/>\r\n                    <span>{ errors.lastName?.message }</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                    <label>Enrollment Number</label>\r\n                    <input type=\"text\" name=\"enrollment\" {...register('enrollment')} className=\"form-control register_input_style\" placeholder=\"Enrollment Number...\"/>\r\n                    <span>{ errors.enrollment?.message }</span>\r\n                </div>\r\n\r\n                <div className=\"form-group col\">\r\n                    <label>Email</label>\r\n                    <input type=\"text\" name=\"email\" {...register('email')} className=\"form-control register_input_style\" placeholder=\"Email...\"/>\r\n                    <span>{ errors.email?.message }</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                    <label>Password</label>\r\n                    <input type={passwordShown ? \"text\" : \"password\"} name=\"password\" {...register('password')} className=\"form-control register_input_style\" placeholder=\"Password...\"/>\r\n                    <span className=\"show-password\" onClick={togglePasswordVisiblity}>Show Password</span>\r\n                    <span>  { errors.password?.message }</span>\r\n                </div>\r\n\r\n                <div className=\"form-group col\">\r\n                    <label>Confirm Password</label>\r\n                    <input type={confirmPasswordShown ? \"text\" : \"password\"} name=\"confirmPassword\" {...register('confirmPassword')} className=\"form-control register_input_style\" placeholder=\"Confirm Password...\"/>\r\n                    <span className=\"show-password\" onClick={toggleConfirmPasswordVisiblity}>Show Password</span>\r\n                    <span>  { errors.confirmPassword && \"Passwords should match\" }</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                    <label>Mobile number</label>\r\n                    <input type=\"text\" name=\"mobile\" {...register('mobile')} className=\"form-control register_input_style\" placeholder=\"Mobile Number...\" />\r\n                    <span>{ errors.mobile?.message }</span>\r\n                </div>\r\n\r\n                <div className=\"form-group col\">\r\n                    <label>Institute Name</label>\r\n                    <input type=\"text\" name=\"institute\" {...register('institute')} className=\"form-control register_input_style\" placeholder=\"Institute...\"/>\r\n                    <span>{ errors.institute?.message }</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                    <label>Year</label>\r\n                    <input type=\"text\" name=\"year\" {...register('year')} className=\"form-control register_input_style\" placeholder=\"Year...\"/>\r\n                    <span>{ errors.year && \"This must be a number\" }</span>\r\n                </div>\r\n\r\n                <div className=\"id-div col\">\r\n                    <label className=\"id-label\">Id Card photo</label><br/><br/>\r\n                    <input type=\"file\" name=\"idCard\" {...register('idCard')}/>\r\n                    <span>{ idCardErrorMessage }</span>\r\n                </div>\r\n            </div>\r\n\r\n            <span> { usernameError } </span>\r\n\r\n            <center>\r\n                <button type=\"submit\" className=\"btn btn-center register-btn\">Get OTP</button>\r\n            </center>\r\n\r\n            <p className=\"text-right\">\r\n                Already registered? \r\n                <Link to='/Login'> Login</Link>\r\n            </p>\r\n        </form>\r\n\r\n        <div className=\"gif_container\" id=\"otp_gif\">\r\n            <img src={otp_send} alt=\"loading\" className=\"gif_style\"/>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React,{ useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from './RegistrationForm';\r\nimport '../../css/registration.css'\r\n\r\nfunction Register(props) {\r\n\r\n    const [state, setState] = useState('');\r\n    let history = useHistory();\r\n\r\n    useEffect( () => {\r\n        setState(<Form setState={ setState } setUserId={ props.setUserId } />)\r\n    }, [])\r\n\r\n    const checkUser = () => {\r\n        if (sessionStorage.getItem('userId')) {\r\n            history.push('/Home');\r\n        }\r\n    }\r\n    checkUser();\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            { state }\r\n        </div>\r\n    )\r\n}\r\nexport default Register;\r\n","import React,{ useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport Particles from 'react-particles-js';\r\nimport '../css/login.css';\r\n\r\nfunction Login(props) {\r\n       \r\n    let history = useHistory();\r\n    const [passwordShown, setPasswordShown] = useState(false);\r\n    const [errorMessage, setErrorMessage]  = useState('');\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const togglePasswordVisiblity = () => {\r\n        setPasswordShown(passwordShown ? false : true);\r\n    };\r\n    \r\n    const submitForm = (data) => {\r\n        fetch(\"http://127.0.0.1:8000/authentication/loginUser\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if(json['response'] === 'Valid') {\r\n                props.setUserId(data['enrollment']);\r\n                sessionStorage.setItem('userId', JSON.stringify(data['enrollment']));\r\n                sessionStorage.setItem('pass', JSON.stringify(btoa(data['password'])));\r\n                history.push(\"/Home\");\r\n            } else {\r\n                setErrorMessage(\"Invalid Credentials\")\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    const checkUser = () => {\r\n        if (sessionStorage.getItem('userId')) {\r\n            history.push('/Home');\r\n        }\r\n    }\r\n    checkUser();\r\n\r\n    const particlesOptions = {\r\n        particles: {\r\n            number: {\r\n                value: 40,\r\n                desity: {\r\n                    enable: true,\r\n                    value_area: 900\r\n                }\r\n            },\r\n            \r\n            color: {\r\n                value: \"#17242A\"\r\n            },\r\n\r\n            size: {\r\n                value: 4\r\n            },\r\n\r\n            events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"repulse\"\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n    \r\n        <div>\r\n            \r\n            <Particles className=\"particles_bg\" params={particlesOptions} />\r\n            <div className=\"login_bg\"></div>\r\n\r\n            <div className=\"row login_card\">\r\n                <form className=\"col-md-12 login_form\" onSubmit={handleSubmit(submitForm)}>\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h3 className=\"login_heading\">Login</h3>\r\n                    </div>\r\n\r\n                    <div>{ errorMessage }</div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Enrollment Number</label>\r\n                        <input type=\"text\" className=\"form-control login_input_style\" name=\"enrollment\" {...register('enrollment', { required: true })} placeholder=\"Enter Enrollment Number\" />\r\n                        <span>{ errors.enrollment?.type === 'required' && \"Enrollment Field is required\" }</span>\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type={passwordShown ? \"text\" : \"password\"} name=\"password\" {...register('password', { required: true })} className=\"form-control login_input_style\" placeholder=\"Password...\"/>\r\n                        <span className=\"show-password\" onClick={togglePasswordVisiblity}>Show Password</span>\r\n                        <span>{ errors.password?.type === 'required' && \"Password Field is required\" }</span>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button type=\"submit\" className=\"login_btn\">Login</button>\r\n                    </center>\r\n\r\n                    <div className=\"bottom_links\">\r\n                        <p className=\"text-center\">\r\n                            <Link to=\"/ForgetPassword\">Forget Password</Link>\r\n                        </p>\r\n                        <br/>\r\n                        <br/>\r\n                    \r\n                        <p className=\"text-right\">\r\n                            <span>Don't have an account? </span>\r\n                            <Link to=\"/Signin\">Create Account</Link>\r\n                        </p>\r\n                    </div>    \r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n }\r\n\r\n export default Login;","import React,{ useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ShowQuestions = (props) => {\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    let history = useHistory();\r\n    let questionsList = questions;\r\n\r\n    useEffect(() =>{\r\n        \r\n        fetch(`http://127.0.0.1:8000/qna/${props.fetchUrl}`, {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(props.questionCategory),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n        \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {   \r\n            if (json.response === 'Valid'){\r\n                setQuestions(json.questions);\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please try again!!!');\r\n            }        \r\n        });\r\n\r\n    }, [props.questionCategory]) \r\n\r\n    const toQuestionPage = (id) => {\r\n        sessionStorage.setItem('questionId', JSON.stringify(id))\r\n        history.push('/Question')\r\n    }\r\n\r\n    questionsList = questionsList.map(question => {\r\n            return (\r\n                <div key={question.id} onClick={ () => toQuestionPage(question.id) } className=\"sec-3_div\">\r\n                    <p> \r\n                        <span> { question.time } </span>                         \r\n                        <span> { question.date } </span>                         \r\n                    </p>\r\n                    <h6> { question.question } </h6>\r\n                    <h6> { question.name } </h6>\r\n                </div>\r\n            )\r\n    });\r\n\r\n    return (\r\n        <div className=\"sec-3\">\r\n            <div className=\"sec-3-div\">\r\n                <div>\r\n                    { questionsList }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowQuestions;","import React from 'react';\r\nimport '../../css/Category.css';\r\n\r\nconst Category = (props) => {\r\n\r\n    const setCategory = (category) => {\r\n      let category_temp = {\r\n        'category': category\r\n      }\r\n      props.setQuestionCategory(category_temp);\r\n    }\r\n\r\n    return (\r\n        <div className=\"drop_down\">\r\n            <button className=\"dropbtn\">Category \r\n              <i className=\"fa fa-caret-down\"></i>\r\n            </button>\r\n            <div className=\"drop_down-content\">\r\n              <div className=\"header\">\r\n                <h3 className=\"cat_heading\">categories</h3>\r\n              </div>   \r\n              <div className=\"row\">\r\n                <div className=\"column\">\r\n                  <p style={{cursor: 'pointer'}} className=\"drop_down_item\" onClick={() => {setCategory('SVITS')}}>Shree Vaishnav Institute of Technology and Science</p>\r\n                  <p style={{cursor: 'pointer'}} className=\"drop_down_item\" onClick={() => {setCategory('SVIFS')}}>Shree Vaishnav Institute of Forensic Science</p>\r\n                  {/* <p style={{cursor: 'pointer'}} class=\"drop_down_item\" onClick={() => {setCategory('SVITS')}}>Link 3</p> */}\r\n                </div>\r\n                <div className=\"column\">\r\n                  <p style={{cursor: 'pointer'}} className=\"drop_down_item\" onClick={() => {setCategory('SVIIT')}}>Shree Vaishnav Institute of Information Technology</p>\r\n                  <p style={{cursor: 'pointer'}} className=\"drop_down_item\" onClick={() => {setCategory('SVIA')}}>Shree Vaishnav Institute of Architecture</p>\r\n                  {/* <p style={{cursor: 'pointer'}} class=\"drop_down_item\" onClick={() => {setCategory('SVITS')}}>Link 3</p> */}\r\n                </div>\r\n                <div className=\"column\">\r\n                  <p style={{cursor: 'pointer'}} className=\"drop_down_item\" onClick={() => {setCategory('SVITT')}}>Shree Vaishnav Institute of Textile Technology</p>\r\n                  <p style={{cursor: 'pointer'}} className=\"drop_down_item\" onClick={() => {setCategory('SVSM')}}>Shree Vaishnav School of Management</p>\r\n                  {/* <p style={{cursor: 'pointer'}} class=\"drop_down_item\" onClick={() => {setCategory('SVITS')}}>Link 3</p> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Category;","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../../css/Navbar.css';\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const userLogout = () => {\r\n        fetch(`http://127.0.0.1:8000/authentication/logoutUser`);\r\n        props.setUserId('');\r\n        sessionStorage.clear();\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                sessionStorage.getItem('userId')\r\n                ?\r\n                <div className=\"sec-1\" >\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <h1><Link to=\"/Home\" className=\"title\"> College Forum </Link></h1>                \r\n                        </div>\r\n\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"topnav\">\r\n\r\n                                <div className=\"topnav-right\" >\r\n                                    <Link className=\"ask\" to=\"/AskQuestion\">Ask a question</Link>\r\n                                    <Link className=\"a\" to=\"/ContactUs\">Contact Us</Link>\r\n                                    <Link className=\"a\" to=\"/AboutUs\">About Us</Link>\r\n                                    <Link className=\"a\" to=\"/Profile\">Profile</Link>\r\n                                    <button onClick={ userLogout } >Logout</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"sec-1\" >\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <h1 className=\"title\"><Link to=\"/\"> College Forum </Link></h1>                \r\n                        </div>\r\n\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"topnav\">\r\n\r\n                                <div className=\"topnav-right\" >\r\n                                    <Link className=\"a\" to=\"/ContactUs\">Contact Us</Link>\r\n                                    <Link className=\"a\" to=\"/AboutUs\">About Us</Link>\r\n                                    <Link className=\"a\" to=\"/Login\">Login</Link>\r\n                                    <Link className=\"a\" to=\"/Signin\">Sign Up</Link>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React,{ useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport ShowQuestions from '../CommonFiles/ShowQuestions';\r\nimport Category from './Category';\r\nimport Navbar from '../CommonFiles/Navbar';\r\nimport '../../css/Home.css';\r\n\r\nconst Home = (props) => {\r\n\r\n  let category = {\r\n    'category': 'SVIIT'\r\n  }\r\n  const [questionCategory, setQuestionCategory] = useState(category);\r\n  const [questionState, setQuestionState] = useState('');\r\n  const { register, handleSubmit } = useForm();\r\n  \r\n  useEffect( () => {\r\n    setQuestionState(<ShowQuestions questionCategory={ questionCategory } fetchUrl={ 'showQues' } />)\r\n  }, [questionCategory])\r\n\r\n  const searchQuestion = (data) => {\r\n    setQuestionState(<ShowQuestions questionCategory={ data } fetchUrl={ 'Search' } />)\r\n  }\r\n\r\n    return(\r\n      <div>\r\n        <Navbar setUserId={ props.setUserId }/>\r\n\r\n        <div className=\"sec-2\">\r\n          <form onSubmit={handleSubmit(searchQuestion)}>\r\n            <input type=\"text\" className=\"ques_input\" name='searchQuery' {...register('searchQuery')} required/>\r\n            <button className=\"search_btn\" type='submit'>\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            </button>\r\n\r\n            <Category setQuestionCategory={setQuestionCategory} />\r\n\r\n          </form>\r\n\r\n          <div className=\"sec-3\">\r\n            { questionState }\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Navbar from './CommonFiles/Navbar';\r\n\r\nconst About = (props) => {\r\n\r\n  return(\r\n    <div>\r\n      <Navbar setUserId={ props.setUserId }/>\r\n\r\n      <div className=\"about-card\">\r\n        <div className=\"about-sec-1\">\r\n          <h1>About Us</h1>\r\n          <p>We are students</p>\r\n          <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n        </div>\r\n        <div className=\"about-sec-2\">\r\n          <h1>Our Team</h1>\r\n          <p>Some text about who we are and what we do.</p>\r\n          <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n          <p>Some text about who we are and what we do.</p>\r\n          <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n          <p>Some text about who we are and what we do.</p>\r\n          <p>Resize the browser window to see that this page is responsive by the way.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup';\r\nimport Navbar from './CommonFiles/Navbar';\r\nimport '../css/Contactus.css';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required(\"This Field is Required\").min(2).max(50).matches(/^[A-Za-z]+((('|-|\\.)?([A-Za-z])+))?$/, \"Please Enter a Valid Name\"),\r\n    email: yup.string().required(\"This Field is Required\").email(\"Please Enter a Valid Email\"),\r\n    content: yup.string().required(\"This Field is Required\")\r\n})\r\n\r\n\r\nconst ContactUs = (props) => {\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const submitForm = (data) => {\r\n        fetch(\"http://127.0.0.1:8000/authentication/contactUs\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                alert('Complaint Added');\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please Try Again!!!');\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Navbar setUserId={ props.setUserId } />\r\n\r\n            <div className=\"card container contact_container\">\r\n                <h3 className=\"contact_heading\">Contact-Us</h3>\r\n\r\n                <form className=\"center\" onSubmit={handleSubmit(submitForm)} >\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" name=\"name\" {...register('name')} className=\"form-control input-style\" />\r\n                        <span>{ errors.name?.message }</span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" {...register('email')} className=\"form-control input-style\" />\r\n                        <span>{ errors.email?.message }</span>\r\n                    </div>\r\n\r\n                    <textarea {...register('content')} placeholder='Enter Your Query' className=\"contact_textarea\"></textarea>\r\n                    <span>{ errors.content?.message }</span>\r\n\r\n                    <button type='submit' className=\"submit_btn\">Submit</button> \r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ContactUs;\r\n","import React,{ useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Navbar from '../CommonFiles/Navbar';\r\nimport '../../css/Askques.css';\r\n\r\nfunction Aques(props) {\r\n\r\n    const [codeState, setCodeState] = useState(false);\r\n    const { register, handleSubmit, formState: { errors } } = useForm({});\r\n    let history = useHistory();\r\n\r\n    const questionSubmit = (data) => {\r\n        console.log(data);\r\n        if(data.codeContent === \"\") {\r\n            data.codeContent = 'None';\r\n        }\r\n        fetch(\"http://127.0.0.1:8000/qna/AddQuestion\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if(json['response'] === 'Valid') {\r\n                history.push('/Home')\r\n            } else if (json['response'] === 'Wrong') {\r\n                alert('Something Went Wrong, Please try again!!!')\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Navbar setUserId={ props.setUserId }/>\r\n\r\n\r\n            <div className=\"askcard\">       \r\n                <form className=\"form\" onSubmit={ handleSubmit(questionSubmit) }>\r\n                    <h2 className=\"add_ans_heading\">Ask Your Question</h2><br/><br/><br/>\r\n                    \r\n                    <div className=\"ans_btns\">\r\n                        <p className=\"ans_btn\" onClick={ () => codeState?setCodeState(false):setCodeState(true)}><b>{ \"{ }\" }</b></p>\r\n                        <p className=\"ans_btn\"><b>B</b></p>\r\n                        <p className=\"ans_btn\"><i>I</i></p>\r\n                    </div>\r\n\r\n                    <textarea {...register('queContent', { required: true })} placeholder='Enter Your Question' className=\"ask_ques_textarea\"></textarea>\r\n                    <span>{ errors.queContent?.type === 'required' && \"Question Field is required\" }</span>\r\n                    <br/>\r\n\r\n                    {\r\n                        codeState\r\n                        ?\r\n                        <div>\r\n                            <textarea name=\"codeContent\" {...register('codeContent')} placeholder='Enter Your Code Here'></textarea><br/>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <input className=\"code_input\" type='hidden' name=\"codeContent\" {...register('codeContent')} ></input><br/>\r\n                        </div>\r\n                    }\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                                <select name=\"category\" {...register('category')} defaultValue=\"General\">\r\n                                    <option value=\"General\">General</option>\r\n                                    <option value=\"SVIIT\">SVIIT</option>\r\n                                    <option value=\"SVITS\">SVITS</option>\r\n                                    <option value=\"SVIM\">SVIM</option>\r\n                                    <option value=\"SVVV\">SVVV</option>\r\n                                    <option value=\"SVIFA\">SVIFA</option>\r\n                                </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <button type=\"submit\" className=\"btn ask_btn\">Publish question</button>\r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Aques;","export default __webpack_public_path__ + \"static/media/c1.37c4f068.png\";","export default __webpack_public_path__ + \"static/media/c2.65e16b26.png\";","export default __webpack_public_path__ + \"static/media/c3.2b0363aa.png\";","import React from \"react\";\r\nimport Navbar from \"./CommonFiles/Navbar\"\r\nimport '../css/Front.css';\r\nimport c1 from '../Images/c1.png';\r\nimport c2 from '../Images/c2.png';\r\nimport c3 from '../Images/c3.png';  \r\n\r\nfunction Front() {\r\n    return(\r\n      <div>\r\n        <Navbar/>\r\n\r\n        <section className=\"carousel_container\">\r\n          <div className=\"carousel slide z-depth-1-half\" data-ride=\"carousel\">\r\n            <div className=\"carousel-inner\">\r\n              <div className=\"carousel-item active\">\r\n                <img className=\"d-block w-100 ig\" src={c3} alt=\"First slide\"/>\r\n                <button className=\"reg_btn\">Register</button>\r\n              </div>\r\n          \r\n              <div className=\"carousel-item\">\r\n                <img className=\"d-block w-100 ig\" src={c1} alt=\"Second slide\"/>\r\n                <button className=\"reg_btn\">Register</button>\r\n\r\n              </div>\r\n          \r\n              <div className=\"carousel-item\">\r\n                <img className=\"d-block w-100 ig\" src={c2} alt=\"Third slide\"/>\r\n                <button className=\"reg_btn\">Register</button>\r\n\r\n              </div>\r\n            </div>\r\n          \r\n            <a className=\"carousel-control-prev\" href=\"#carouselExample1\" role=\"button\" data-slide=\"prev\">\r\n              <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n              <span className=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a className=\"carousel-control-next\" href=\"#carouselExample1\" role=\"button\" data-slide=\"next\">\r\n              <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n              <span className=\"sr-only\">Next</span>\r\n            </a>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n}\r\nexport default Front;\r\n\r\n{/* <section className=\"navbarcolor\">\r\n          <div className=\"container-fluid\">\r\n        \r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n              <a className=\"navbar-brand\" href=\"\">College Forum</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#Aboutus\">AboutUs</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#contactus\">Contact us</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <button className=\"nav-link front_login_btn\" href=\"#\">Log in</button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </section> */}\r\n\r\n {/* </section> */}\r\n\r\n       \r\n     {/* <div id=\"carouselmove\" class=\"carousel slide\" data-ride=\"false\">\r\n       <div className=\"carousel-inner\" data-interval=\"3000\">\r\n         <div className=\"carousel-item active \">\r\n         <div className=\"carousel-caption carousel-content\">\r\n                 <h1>WELCOME</h1>\r\n                 <h1>to</h1>\r\n                 <h1>COLLEGE FORUM</h1>\r\n                 <button type=\"button\" class=\"btn btn-primary btn-lg\">Sign Up</button>\r\n                 <button type=\"button\" class=\"btn btn-info btn-lg\">Login</button>\r\n              </div>\r\n            \r\n          \r\n              <div className=\"carousel-item  \">\r\n                <div className=\"carousel-caption carousel-content\">\r\n                  <h1>WELCOME</h1>\r\n                  <h1>to</h1>\r\n                  <h1>COLLEGE FORUM</h1>\r\n                  <button type=\"button\" className=\"btn btn-primary\">Sign Up</button>\r\n                  <button type=\"button\" className=\"btn btn-info\">Login</button>\r\n                </div>\r\n                <img src={carouselimg} alt=\"profile\"/>\r\n              \r\n              </div>\r\n\r\n              <div className=\"carousel-item  \">\r\n                <div className=\"carousel-caption carousel-content\">\r\n                  <h1>WELCOME</h1>\r\n                  <h1>to</h1>\r\n                  <h1>COLLEGE FORUM</h1>\r\n                  <button type=\"button\" className=\"btn btn-primary\">Sign Up</button>\r\n                  <button type=\"button\" className=\"btn btn-info\">Login</button>\r\n                </div>\r\n              <img src={carouselimg} alt=\"profile\"/>\r\n              \r\n              </div>\r\n         <img src={carouselimg} alt=\"profile\"/>\r\n         \r\n         </div>\r\n         </div>\r\n     \r\n       <a className=\"carousel-control-prev\" href=\"#carouselmove\" role=\"button\" data-slide=\"prev\">\r\n     <span className=\"carousel-control-prev-icon\"></span>\r\n       </a>\r\n       <a className=\"carousel-control-next\" href=\"#carouselmove\" role=\"button\" data-slide=\"next\">\r\n     <span className=\"carousel-control-next-icon\"></span>\r\n       </a>\r\n</div> */}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../css/Profile/ViewProfile.css\";\r\n\r\nconst ViewProfile = () => {\r\n\r\n    const [userProfile, setUserProfile] = useState({});\r\n\r\n    useEffect( () => {\r\n        fetch(\"http://127.0.0.1:8000/authentication/viewProfile\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(''),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n\r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                setUserProfile(json);\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please Try Again!!!');\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h4 className=\"profile_heading\">View Profile</h4>\r\n\r\n            <hr/>\r\n\r\n            <p className=\"profile_row\"> \r\n                <span className=\"label\"> First Name </span>\r\n                <span className=\"profile_info_one\"> { userProfile.firstName } </span>\r\n            </p>\r\n            <p className=\"profile_row\"> \r\n                <span className=\"label\"> Last Name </span>\r\n                <span className=\"profile_info_two\"> { userProfile.lastName } </span>\r\n            </p>\r\n            <p className=\"profile_row\"> \r\n                <span className=\"label\"> Email </span>\r\n                <span className=\"profile_info_three\"> { userProfile.email } </span>\r\n            </p>\r\n            <p className=\"profile_row\"> \r\n                <span className=\"label\"> Enrollment </span>\r\n                <span className=\"profile_info_four\"> { userProfile.enrollment } </span>\r\n            </p>\r\n            <p className=\"profile_row\"> \r\n                <span className=\"label\"> Mobile </span>\r\n                <span className=\"profile_info_five\"> { userProfile.mobile } </span>\r\n            </p>\r\n            <p className=\"profile_row\"> \r\n                <span className=\"label\"> Institute </span>\r\n                <span className=\"profile_info_six\"> { userProfile.institute } </span>\r\n            </p>\r\n            <p className=\"profile_row\"> \r\n                <span className=\"label\"> Year </span>\r\n                <span className=\"profile_info_seven\"> { userProfile.year } </span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewProfile;","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup';\r\nimport \"../../css/Profile/ChangePassword.css\"\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().required(\"This Field is Required\").email(\"Please Enter a Valid Email\"),\r\n    mobile: yup.string().required(\"This Field is Required\").matches(/^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)$/, \"Please Enter a Valid Mobile Number\"),\r\n    year: yup.string().required(\"This Field is Required\"),\r\n})\r\n\r\nfunction UpdateProfile() {\r\n\r\n    const [userProfileData, setUserProfileData] = useState({})\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    useEffect( () => {\r\n        fetch(`http://127.0.0.1:8000/authentication/updateProfile`)\r\n\r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n\r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                setUserProfileData(json);\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please Try Again!!!');\r\n            }\r\n        })\r\n    }, [])\r\n    \r\n    const submitProfile = (data, e) => {\r\n        fetch(\"http://127.0.0.1:8000/authentication/updateProfile\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                // sessionStorage.setItem('userProfileData', JSON.stringify(json));\r\n                setUserProfileData(JSON.stringify(json));\r\n                e.target.reset();\r\n                alert('Profile Updated');    \r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please Try Again!!!');\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"right-profile\">\r\n            <form onSubmit={handleSubmit(submitProfile)}>\r\n                <h4 className=\"profile_heading\">Update Profile</h4>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"profile-component\">Email</label>\r\n                    <input type=\"text\" {...register('email')} name=\"email\" className=\"form-control input-style\" placeholder={userProfileData.email} />\r\n                    <span>{ errors.email?.message }</span>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"profile-component\">Mobile number</label>\r\n                    <input type=\"tel\" {...register('mobile')} name=\"mobile\" className=\"form-control input-style\" placeholder={userProfileData.mobile} />\r\n                    <span>{ errors.mobile?.message }</span>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"profile-component\">Year</label>\r\n                    <input type=\"number\" {...register('year')} name=\"year\" className=\"form-control input-style\" min='1' max='6' step='1' placeholder={userProfileData.year} />\r\n                    <span>{ errors.year?.message }</span>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary save_btn\" >Save</button>\r\n                                        \r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport Particles from 'react-particles-js';\r\nimport * as yup from 'yup';\r\nimport \"../../css/Profile/ChangePassword.css\";\r\n\r\nconst schema = yup.object().shape({\r\n    oldPassword: yup.string().required(\"This Field is Required\"),\r\n    password: yup.string().required(\"This Field is Required\").min(8).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, \"Please Enter a Valid Password\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\r\n});\r\n\r\nfunction ChangePassword() {\r\n\r\n    const [oldPasswordVisibility, setOldPasswordVisibility] = useState(false);\r\n    const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n    const [confirmPasswordVisibility, setConfirmPasswordVisibility] = useState(false);\r\n    const [oldPasswordErrorMessage, setOldPasswordErrorMessage] = useState('')\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    \r\n    const togglePasswordVisiblity = function(value) {\r\n        switch (value) {\r\n            case 'oldPassword':\r\n                setOldPasswordVisibility(oldPasswordVisibility ? false : true);\r\n                break;\r\n        \r\n            case 'password':\r\n                setPasswordVisibility(passwordVisibility ? false : true);\r\n                break;\r\n        \r\n            case 'confirmPassword':\r\n                setConfirmPasswordVisibility(confirmPasswordVisibility ? false : true);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    };    \r\n\r\n    const submitPassword = (data) => {\r\n        console.log(data);\r\n        if(btoa(data.oldPassword) === JSON.parse(sessionStorage.getItem('pass'))) {\r\n            fetch(\"http://127.0.0.1:8000/authentication/changePassword\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n            })\r\n    \r\n            // Converting to JSON\r\n            .then(response => response.json())\r\n            \r\n            // Displaying results to console\r\n            .then(json => {\r\n                if (json.response === 'Valid') {\r\n                    alert(\"Password Updated!!!\");\r\n                } else if (json.response === 'Wrong') {\r\n                    alert('Something Went Wrong, Please Try Again!!!');\r\n                }\r\n            });\r\n        } else {\r\n            setOldPasswordErrorMessage('Old Password Does Not Match');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(submitPassword)}>\r\n                <h4 className=\"profile_heading\">Change Password</h4>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Old Password</label>\r\n                    <input type={oldPasswordVisibility ? \"text\" : \"password\"} name=\"oldPassword\" {...register('oldPassword')} className=\"form-control input-style\" />\r\n                    <span className=\"show-password\" onClick={() => togglePasswordVisiblity('oldPassword')}>Show Password</span>\r\n                    <p>  { errors.oldPassword?.message } </p>\r\n                    <span> { oldPasswordErrorMessage } </span>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type={passwordVisibility ? \"text\" : \"password\"} name=\"password\" {...register('password')} className=\"form-control input-style\" />\r\n                    <span className=\"show-password\" onClick={() => togglePasswordVisiblity('password')}>Show Password</span>\r\n                    <p>  { errors.password?.message }</p>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Confirm Password</label>\r\n                    <input type={confirmPasswordVisibility ? \"text\" : \"password\"} name=\"confirmPassword\" {...register('confirmPassword')} className=\"form-control input-style\" />\r\n                    <span className=\"show-password\" onClick={() => togglePasswordVisiblity('confirmPassword')}>Show Password</span>\r\n                    <p>  { errors.confirmPassword && \"Passwords should match\" }</p>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary save_btn\" >Save</button>\r\n\r\n                </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChangePassword;","import React, { useState } from \"react\";\r\nimport ViewProfile from './ViewProfile';\r\nimport UpdateProfile from './UpdateProfile';\r\nimport ChangePassword from './ChangePassword';\r\nimport ShowQuestions from '../CommonFiles/ShowQuestions';\r\nimport Navbar from \"../CommonFiles/Navbar\"\r\nimport '../../css/Profile/Profile.css'\r\n\r\nconst Profile = (props) => {\r\n    \r\n    const [state, setState] = useState(<ViewProfile/>);\r\n    const questionState = <ShowQuestions questionCategory={ '' } fetchUrl={ 'MyQuestions' } />\r\n\r\n    return(\r\n\r\n        <div className=\"wrapper\">\r\n        <Navbar setUserId={ props.setUserId }/>\r\n\r\n            <div className=\"nav_bar\">\r\n                <h4 className=\"heading\">My profile</h4>\r\n\r\n                <div className=\"right_nav\">\r\n\r\n                    <div className=\"profile-a\">\r\n                        <p className=\"nav_ele\" onClick={() => setState(<ViewProfile/>)}>View Profile</p><br/>\r\n                    </div>\r\n\r\n                    <div className=\"profile-a\">\r\n                        <p className=\"nav_ele\" onClick={() => setState(<ChangePassword/>)}>Change Password</p><br/>\r\n                    </div>\r\n\r\n                    <div className=\"profile-a\">\r\n                        <p className=\"nav_ele\" onClick={() => setState(<UpdateProfile/>)}>Update Profile</p>\r\n                    </div>\r\n    \r\n                    <div className=\"profile-a\">\r\n                        <p className=\"nav_ele\" onClick={() => setState(questionState)}>My Questions</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"state\">\r\n                { state }\r\n            </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React, { useState } from \"react\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport '../../css/Profile/ChangePassword.css';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst schema = yup.object().shape({\r\n    password: yup.string().required(\"This Field is Required\").min(8).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, \"Please Enter a Valid Password\"),\r\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\r\n});\r\n\r\nconst ResetPass = () => {\r\n\r\n    let history = useHistory();\r\n    const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n    const [confirmPasswordVisibility, setConfirmPasswordVisibility] = useState(false);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    \r\n    const togglePasswordVisiblity = function(value) {\r\n        switch (value) {        \r\n            case 'password':\r\n                setPasswordVisibility(passwordVisibility ? false : true);\r\n                break;\r\n        \r\n            case 'confirmPassword':\r\n                setConfirmPasswordVisibility(confirmPasswordVisibility ? false : true);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    };    \r\n\r\n    const submitPassword = (data) => {\r\n        console.log(data);\r\n        fetch(\"http://127.0.0.1:8000/authentication/changePassword\", {\r\n    \r\n        // Adding method type\r\n        method: \"POST\",\r\n        \r\n        // Adding body or contents to send\r\n        body: JSON.stringify(data),\r\n        \r\n        // Adding headers to the request\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n        })\r\n\r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            alert(json['response']);\r\n        });\r\n        history.push('/Login');\r\n    }\r\n\r\n    const particlesOptions = {\r\n        particles: {\r\n            number: {\r\n                value: 40,\r\n                desity: {\r\n                    enable: true,\r\n                    value_area: 900\r\n                }\r\n            },\r\n            \r\n            color: {\r\n                value: \"#17242A\"\r\n            },\r\n\r\n            size: {\r\n                value: 4\r\n            },\r\n\r\n            events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"repulse\"\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Particles className=\"change_pass_particles_bg\" params={particlesOptions} />\r\n            <div className=\"change_pass_bg\"></div>\r\n\r\n            <div className=\"reset_bg\">\r\n                <div className=\"reset_card\">\r\n                    <form onSubmit={handleSubmit(submitPassword)}>\r\n                        <center>\r\n                            <h4 className=\"profile-component\">Change Password</h4>\r\n                        </center>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type={passwordVisibility ? \"text\" : \"password\"} name=\"password\" {...register('password')} className=\"form-control input-style\" placeholder=\"Password...\"/>\r\n                            <span className=\"show-password\" onClick={() => togglePasswordVisiblity('password')}>Show Password</span>\r\n                            <p>  { errors.password?.message }</p>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password</label>\r\n                            <input type={confirmPasswordVisibility ? \"text\" : \"password\"} name=\"confirmPassword\" {...register('confirmPassword')} className=\"form-control input-style\" placeholder=\"Confirm Password...\"/>\r\n                            <span className=\"show-password\" onClick={() => togglePasswordVisiblity('confirmPassword')}>Show Password</span>\r\n                            <p>  { errors.confirmPassword && \"Passwords should match\" }</p>\r\n                        </div>\r\n\r\n                        <center>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg profile-component save_btn\">Save</button>\r\n                        </center>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPass;","import React, { useState } from \"react\";\r\nimport { useForm } from 'react-hook-form';\r\nimport ResetPass from './ResetPass';\r\nimport '../../css/Forgotpassword.css';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst ForgetOTP = (props) => {\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const [otpError, setOtpError] = useState('');\r\n\r\n\r\n  const onSubmitOTP = function(data) {\r\n    data.location = 'forgetPassword'\r\n    fetch(\"http://127.0.0.1:8000/authentication/OTP\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n          if(json['result'] === 'Valid') {\r\n            props.setState(<ResetPass/>);\r\n          }else {\r\n            setOtpError('Invalid OTP');\r\n          }\r\n        });\r\n      } \r\n\r\n      const particlesOptions = {\r\n        particles: {\r\n            number: {\r\n                value: 40,\r\n                desity: {\r\n                    enable: true,\r\n                    value_area: 900\r\n                }\r\n            },\r\n            \r\n            color: {\r\n                value: \"#17242A\"\r\n            },\r\n\r\n            size: {\r\n                value: 4\r\n            },\r\n\r\n            events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"repulse\"\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\nreturn(\r\n    <div>\r\n      <Particles className=\"change_pass_particles_bg\" params={particlesOptions} />\r\n      <div className=\"change_pass_bg\"></div>\r\n\r\n      <div className=\"enrol_bg\">\r\n        <div className=\"otp_card\">\r\n\r\n          <center>\r\n            <h2>Account Verification!</h2>\r\n            <h6> Enter the OTP we just send on your Email. </h6>\r\n          </center>\r\n\r\n          <form onSubmit={handleSubmit(onSubmitOTP)}>\r\n            <center>\r\n              <input type=\"text\" name=\"otpValue\" {...register('otpValue')} className=\"smsCode otp_input_style\" autoFocus=\"\" maxLength=\"4\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{4}\"/><br/>\r\n\r\n              <button type=\"submit\" className=\"otp_submit_button\">Verify</button><br/>\r\n              <span className=\"error_msg\">{ otpError }</span>\r\n            </center>\r\n          </form> \r\n        </div>\r\n      </div>\r\n    </div>       \r\n  );\r\n}\r\n\r\nexport default ForgetOTP;","import React,{ useState } from \"react\";\r\nimport ForgetOTP from './ForgetOTP';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport Particles from 'react-particles-js';\r\nimport * as yup from 'yup';\r\nimport '../../css/Forgotpassword.css';\r\nimport otp_send from '../../Images/otp_send.gif';\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    enrollment: yup.string().required(\"This Field is Required\"),\r\n})\r\n\r\nconst Username = (props) => {\r\n\r\n    let userAuthentication = '';\r\n    const [usernameError, setUsernameError] = useState('');\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const submitForm = (data) => {\r\n        console.log(data);\r\n        fetch(\"http://127.0.0.1:8000/authentication/forgetPasswordUsername\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n\r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n            \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                userAuthentication = 'Valid';\r\n            } else if (json.response === 'Invalid') {\r\n                userAuthentication = 'Invalid';\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please try Again!!!');\r\n            }\r\n        });\r\n\r\n        document.getElementById('otp_gif').style.display = 'block';\r\n        setTimeout(() => {\r\n            if (userAuthentication === \"Valid\"){\r\n                props.setState(<ForgetOTP setState={props.setState}/>)\r\n            } else if(userAuthentication === \"Invalid\") {\r\n                setUsernameError(\"This Enrollment is not Registered, Please insert correct Enrollment!!!\");\r\n                document.getElementById('otp_gif').style.display = 'none';\r\n            }\r\n        }, 4000);\r\n    }\r\n\r\n    const particlesOptions = {\r\n        particles: {\r\n            number: {\r\n                value: 40,\r\n                desity: {\r\n                    enable: true,\r\n                    value_area: 900\r\n                }\r\n            },\r\n            \r\n            color: {\r\n                value: \"#17242A\"\r\n            },\r\n\r\n            size: {\r\n                value: 4\r\n            },\r\n\r\n            events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"repulse\"\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Particles className=\"change_pass_particles_bg\" params={particlesOptions} />\r\n            <div className=\"change_pass_bg\"></div>\r\n            <div className=\"main_wrapper\">\r\n                <div className=\"enrol_bg\">\r\n                    <div className=\"forget_card\">\r\n                        <div className=\"form-group\">\r\n                            <h3 className=\"enroll_heading\">Enter Your Enrollment</h3>\r\n\r\n                            <form onSubmit={handleSubmit(submitForm)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" name=\"enrollment\" {...register('enrollment')} className=\"form-control enrol_input_style\" placeholder=\"Enter Enrollment...\" />\r\n                                    <span>{ errors.enrollment?.message }</span>\r\n                                </div>\r\n\r\n                                <span> { usernameError } </span>\r\n\r\n                                <center>\r\n                                    <button type=\"submit\" className=\"btn btn-primary btn-lg get_otp_btn\">Get OTP</button>\r\n                                </center>\r\n                            </form>            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"gif_container\" id=\"otp_gif\">\r\n                <img src={otp_send} alt=\"loading\" className=\"gif_style\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Username;","import React,{ useState, useEffect } from \"react\";\r\nimport Username from './Username';\r\n\r\nfunction ForgetPassword() {\r\n\r\n    const [state, setState] = useState('');\r\n\r\n    useEffect( () => {\r\n        setState(<Username setState={ setState }/>)\r\n    }, [])\r\n    \r\nreturn(\r\n    <div>\r\n      { state } \r\n    </div>       \r\n  );\r\n}\r\nexport default ForgetPassword;","import React,{ useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport \"../../css/question_page.css\";\r\n\r\nconst AnswerSubmit = (props) => {\r\n\r\n    const [codeState, setCodeState] = useState(false);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const submitAnswer = (data) => {\r\n        console.log(data);\r\n        if(data.codeContent === \"\") {\r\n            data.codeContent = 'None';\r\n        }\r\n        data.que_id = JSON.parse(sessionStorage.getItem('questionId'));\r\n        console.log(data);\r\n        fetch(\"http://127.0.0.1:8000/qna/AnswerSubmit\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                props.setContentReload(props.contentReload + 1);\r\n            } else if (json.response === 'Wrong') {\r\n                alert(\"Something Went Wrong, Please try again!!!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit(submitAnswer) }>\r\n            <h3 className=\"add_ans_heading\">Add your answer</h3><br/><br/><br/>\r\n            \r\n            <div className=\"ans_btns\">\r\n                <p className=\"ans_btn\" onClick={ () => codeState?setCodeState(false):setCodeState(true)}><b>{ \"{ }\" }</b></p>\r\n                <p className=\"ans_btn\"><b>B</b></p>\r\n                <p className=\"ans_btn\"><i>I</i></p>\r\n            </div>\r\n\r\n            <textarea {...register('answerContent', { required: true })} placeholder='Enter Your Answer' className=\"ask_ques_textarea\"></textarea><br/>\r\n            <span>{ errors.answerContent?.type === 'required' && \"Answer Field is required\" }</span>\r\n\r\n            {\r\n                codeState\r\n                ?\r\n                <div>\r\n                    <textarea name=\"codeContent\" {...register('codeContent')} placeholder='Enter Your Code Here'></textarea><br/>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input className=\"code_input\" type='hidden' name=\"codeContent\" {...register('codeContent')} ></input><br/>\r\n                </div>\r\n            }\r\n            \r\n            <button type='submit' className=\"submit_btn\">Publish</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AnswerSubmit;","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport '../../css/Modal.css';\r\n\r\nconst Answers = (props) => {\r\n\r\n    const [modalisOpen, setModalIsOpen] = useState(false);\r\n    const [tempAnswerId, setTempAnswerId] = useState('');\r\n    const [reportCategoryValue, setReportCategoryValue] = useState('');\r\n\r\n    const customStyles = {\r\n        content : {\r\n          top                   : '40%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)',\r\n          height                : '400px',\r\n          width                 : '600px',\r\n        }\r\n    };\r\n\r\n    let answerContent = props.answerList;\r\n    \r\n    const submitSatisfactoryAnswer = (answer_id) => {\r\n        // if (answer_id === JSON.parse(sessionStorage.getItem('userId')))\r\n        const data = {\r\n            ans_id: answer_id,\r\n            que_id: JSON.parse(sessionStorage.getItem('questionId'))\r\n        }\r\n\r\n        fetch(\"http://127.0.0.1:8000/qna/SubmitSatisfactoryAnswer\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(data),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                props.setContentReload(props.contentReload + 1);\r\n            } else if (json.response === 'Invalid') {\r\n                alert('Invalid User');\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please try again!!!');\r\n            }\r\n        });\r\n    }\r\n\r\n    const onModelClick = (answerId) => {\r\n        setTempAnswerId(answerId);\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n    const reportSubmit = () => {\r\n        const report = {\r\n            'category': reportCategoryValue,\r\n            \"id\": tempAnswerId,\r\n            \"type\": \"A\"\r\n        }\r\n\r\n        fetch(\"http://127.0.0.1:8000/qna/ReportContent\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(report),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                alert('Answer Reported!!!');\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please try again!!!');\r\n            }\r\n        });\r\n        setModalIsOpen(false);\r\n    }\r\n\r\n    const setReportCategory = (event) => {\r\n        setReportCategoryValue(event.target.value);\r\n    }\r\n\r\n    if ( answerContent.length === 0 ) {\r\n        answerContent = <h2>No Answers</h2>\r\n    } else {\r\n        answerContent = answerContent.map(answer => {\r\n            return (\r\n                <div className=\"answers\" key={ answer.answer_id }>\r\n                    <div className=\"ans_left\">\r\n                        <button className=\"sat_ans_btn\" onClick={() => { submitSatisfactoryAnswer(answer.answer_id) } }>\r\n                            {\r\n                                Number(props.satisfactoryAnswer) === Number(answer.answer_id)\r\n                                ?\r\n                                <span>\r\n                                    <i className=\"fa fa-check fa-2x\"></i>\r\n                                </span>\r\n                                :\r\n                                <span>\r\n                                    <i className=\"fa fa-star fa-2x\"></i>\r\n                                </span>\r\n                            }\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"ans_right\">\r\n                        <div className=\"answer_header\">\r\n                            <b> { answer.name } </b>\r\n                            <div className=\"answer_header_right\">\r\n                                <div className=\"ans_date_time\">\r\n                                    <p>{ answer.date }</p>\r\n                                    <p>{ answer.time }</p>\r\n                                </div><br/>\r\n                                <div className=\"report_btn_div\">\r\n                                    <button onClick={() => onModelClick(answer.answer_id)} className=\"btn btn-danger report_btn\">\r\n                                    <span className=\"report_icon\">❕</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"answer_body\">\r\n                            <p> { answer.answer } </p>\r\n                            {\r\n                            answer.code === 'None' || answer.code === ''\r\n                            ?\r\n                            <span></span>\r\n                            :\r\n                            <code className=\"code_style\"> { answer.code } </code>\r\n                            }\r\n                        </div>\r\n                                                \r\n                    </div>\r\n                </div>\r\n                \r\n            )\r\n        });     \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { answerContent }\r\n            \r\n            <Modal style={customStyles} isOpen={modalisOpen}>\r\n            \r\n                <div className=\"row\">\r\n                    \r\n                    <div  className=\"col-lg-8\">\r\n                        <h2 className=\"modal-heading\">Report content under</h2>\r\n                    </div>\r\n                    \r\n                    <div  className=\"col-lg-4 cross-btn\">   \r\n                        <button className=\"close_btn\" onClick={() => setModalIsOpen(false)}>✖</button>\r\n                    </div>\r\n\r\n                    <br/><br/>\r\n                    \r\n                </div>\r\n\r\n                <div onChange={ setReportCategory }>\r\n                    \r\n                <input type=\"radio\" value=\"Abusive Content\" name=\"category\" /> Abusive Content\r\n                <br/>\r\n                <input type=\"radio\" value=\"Hate Speech\" name=\"category\" /> Hate Speech\r\n                <br/>\r\n                <input type=\"radio\" value=\"Violence\" name=\"category\" /> Violence\r\n                <br/>\r\n                <input type=\"radio\" value=\"Illegal Activities\" name=\"category\" /> Illegal Activities\r\n                <br/>\r\n                <input type=\"radio\" value=\"Inappropriate info\" name=\"category\" /> Inappropriate info\r\n                <br/>\r\n                <input type=\"radio\" value=\"Terrorist content\" name=\"category\" /> Terrorist content\r\n                <br/>\r\n                <input type=\"radio\" value=\"Other\" name=\"category\" /> Other\r\n                <br/>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <button type=\"button\" onClick={ reportSubmit } class=\"btn btn-danger report_post_btn\">Report</button>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answers;","import React,{ useState, useEffect } from 'react';\r\nimport AnswerSubmit from './AnswerSubmit';\r\nimport Answers from './Answers';\r\nimport Navbar from '../CommonFiles/Navbar';\r\nimport Modal from 'react-modal';\r\nimport '../../css/Modal.css';\r\nimport \"../../css/question_page.css\";\r\n\r\nconst Question = (props) => {\r\n    const [questionContent, setQuestionContent] = useState({});\r\n    const [answerList, setAnswerList] = useState([]);\r\n    const [contentReload, setContentReload] = useState(0);\r\n    const [satisfactoryAnswer, setSatisfactoryAnswer] = useState(null);\r\n    const [tempQuestionId, setTempQuestionId] = useState('');\r\n    const [reportCategoryValue, setReportCategoryValue] = useState('');\r\n    const [modalisOpen, setModalIsOpen] = useState(false);\r\n\r\n    const customStyles = {\r\n        content : {\r\n          top                   : '40%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          marginRight           : '-50%',\r\n          transform             : 'translate(-50%, -50%)',\r\n          height                : '400px',\r\n          width                 : '600px',\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let questionId = {\r\n            \"id\": JSON.parse(sessionStorage.getItem('questionId'))\r\n        } \r\n        fetch(`http://127.0.0.1:8000/qna/QuesPage`, {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(questionId),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n        \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {     \r\n            if (json.response === \"Valid\") {\r\n                setQuestionContent(json);\r\n                setAnswerList(json['answers']);\r\n                setSatisfactoryAnswer(json.satisfactory);\r\n            } else if (json.response === \"Wrong\") {\r\n                alert(\"Something Went Wrong, Please try again Later!!!\");\r\n            }\r\n        });\r\n\r\n    }, [contentReload]) \r\n\r\n    const onModelClick = (answerId) => {\r\n        setTempQuestionId(answerId);\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n    const reportSubmit = () => {\r\n        const report = {\r\n            'category': reportCategoryValue,\r\n            \"id\": tempQuestionId,\r\n            \"type\": \"Q\"\r\n        }\r\n\r\n        fetch(\"http://127.0.0.1:8000/qna/ReportContent\", {\r\n      \r\n            // Adding method type\r\n            method: \"POST\",\r\n            \r\n            // Adding body or contents to send\r\n            body: JSON.stringify(report),\r\n            \r\n            // Adding headers to the request\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        })\r\n  \r\n        // Converting to JSON\r\n        .then(response => response.json())\r\n        \r\n        // Displaying results to console\r\n        .then(json => {\r\n            if (json.response === 'Valid') {\r\n                alert('Question Reported!!!');\r\n            } else if (json.response === 'Wrong') {\r\n                alert('Something Went Wrong, Please try again!!!');\r\n            }\r\n        });\r\n        setModalIsOpen(false);\r\n    }\r\n\r\n    const setReportCategory = (event) => {\r\n        setReportCategoryValue(event.target.value);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar setUserId={ props.setUserId }/>\r\n\r\n            <div className=\"question_body\"> \r\n\r\n                <div className=\"question_head\">\r\n                    <div className=\"question_content\">\r\n                        <p className=\"question_content_p\"> { questionContent.question } </p>\r\n                        {\r\n                            questionContent.code === 'None' || questionContent.code === ''\r\n                            ?\r\n                            <span></span>\r\n                            :\r\n                            <code className=\"code_style\"> { questionContent.code } </code>\r\n                        }\r\n                    </div>\r\n            \r\n                    <div className=\"question_details\">\r\n                        <div className=\"question_detail_left\">\r\n                            <div className=\"questioner\">\r\n                                <p>Asked by: <b> { questionContent.questioner } </b></p>\r\n                            </div>\r\n                            <div className=\"date_time\">\r\n                                <p>Asked on: &nbsp;\r\n                                    <b> \r\n                                        { questionContent.date }<span>  </span>\r\n                                        { questionContent.time } \r\n                                    </b>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"question_detail_right\">\r\n                            <div className=\"report_btn_div\">\r\n                                    <button onClick={() => onModelClick(JSON.parse(sessionStorage.getItem('questionId')))} className=\"btn btn-danger report_btn\">\r\n                                    <span className=\"report_icon\">❕</span>\r\n                                    </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n\r\n                <div className=\"answer_section\">\r\n                    <Answers answerList={ answerList } satisfactoryAnswer={ satisfactoryAnswer } setContentReload={ setContentReload } contentReload={ contentReload } />\r\n                </div>\r\n\r\n                <hr className=\"answer_section_hr\"/>\r\n                <div className=\"answer_input_section\">\r\n                    <AnswerSubmit setContentReload={ setContentReload } contentReload={ contentReload } />\r\n                </div>\r\n\r\n                <Modal style={customStyles} isOpen={modalisOpen}>\r\n                \r\n                    <div className=\"row\">\r\n                        \r\n                        <div  className=\"col-lg-8\">\r\n                            <h2 className=\"modal-heading\">Report content under</h2>\r\n                        </div>\r\n                        \r\n                        <div  className=\"col-lg-4 cross-btn\">   \r\n                            <button className=\"close_btn\" onClick={() => setModalIsOpen(false)}>✖</button>\r\n                        </div>\r\n\r\n                        <br/><br/>\r\n                        \r\n                    </div>\r\n\r\n                    <div onChange={ setReportCategory }>\r\n                        \r\n                    <input type=\"radio\" value=\"Abusive Content\" name=\"category\" /> Abusive Content\r\n                    <br/>\r\n                    <input type=\"radio\" value=\"Hate Speech\" name=\"category\" /> Hate Speech\r\n                    <br/>\r\n                    <input type=\"radio\" value=\"Violence\" name=\"category\" /> Violence\r\n                    <br/>\r\n                    <input type=\"radio\" value=\"Illegal Activities\" name=\"category\" /> Illegal Activities\r\n                    <br/>\r\n                    <input type=\"radio\" value=\"Inappropriate info\" name=\"category\" /> Inappropriate info\r\n                    <br/>\r\n                    <input type=\"radio\" value=\"Terrorist content\" name=\"category\" /> Terrorist content\r\n                    <br/>\r\n                    <input type=\"radio\" value=\"Other\" name=\"category\" /> Other\r\n                    <br/>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button type=\"button\" onClick={ reportSubmit } className=\"btn btn-danger report_post_btn\">Report</button>\r\n                    </div>\r\n\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","import React,{ useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Register from './RegisterUser/Register';\r\nimport Login from './Login';\r\nimport Home from './Home/Home';\r\nimport About from \"./About-us\";\r\nimport Contact from \"./Contact-us\";\r\nimport Aques from \"./Ques&Ans/Askques\";\r\nimport Front from \"./front\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport ForgetPassword from './Forgetpassword/ForgetPassword';\r\nimport Question from './Ques&Ans/Question'\r\n\r\n// import Update from './Update';\r\n// import Questions from './Questions';\r\nfunction App() {\r\n\r\n    const setUserSession = () => {\r\n        if(sessionStorage.getItem('userId')) {\r\n            return sessionStorage.getItem('userId');\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    const [userId, setUserId] = useState(setUserSession);\r\n  \r\nreturn( \r\n    <div>\r\n        { userId \r\n            ?\r\n            <div>\r\n\r\n                <Route  path=\"/AboutUs\" >\r\n                    <About setUserId={ setUserId }/>\r\n                </Route> \r\n\r\n                <Route  path=\"/ContactUS\" >\r\n                    <Contact setUserId={ setUserId }/>\r\n                </Route> \r\n\r\n                <Route  path=\"/AskQuestion\" >\r\n                    <Aques setUserId={ setUserId }/>\r\n                </Route> \r\n\r\n                <Route  path=\"/Home\" >\r\n                    <Home setUserId={ setUserId } />\r\n                </Route>\r\n                          \r\n                <Route  path=\"/Question\" >\r\n                    <Question setUserId={ setUserId } />\r\n                </Route>  \r\n\r\n                <Route  path=\"/Profile\" >\r\n                    <Profile setUserId={ setUserId } />\r\n                </Route>\r\n\r\n                <Route  path=\"/Login\" >\r\n                    <Login setUserId={ setUserId }/>\r\n                </Route>\r\n\r\n                <Route  path=\"/Signin\" >\r\n                    <Register setUserId={ setUserId } />\r\n                </Route> \r\n                \r\n            </div>\r\n            :\r\n            <div>\r\n                <Route exact path=\"/\">\r\n                    <Front/>\r\n                </Route> \r\n\r\n                <Route  path=\"/AboutUs\" >\r\n                    <About />\r\n                </Route> \r\n\r\n                <Route  path=\"/ContactUS\" >\r\n                    <Contact />\r\n                </Route> \r\n\r\n                <Route  path=\"/ForgetPassword\" >\r\n                    <ForgetPassword/>\r\n                </Route>\r\n                \r\n                <Route  path=\"/Login\" >\r\n                    <Login setUserId={ setUserId }/>\r\n                </Route>\r\n\r\n                <Route  path=\"/Signin\" >\r\n                    <Register setUserId={ setUserId } />\r\n                </Route>  \r\n\r\n            </div>    \r\n            }\r\n    </div>\r\n);\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./Components/App\";\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport ReactModal from 'react-modal';\r\nReactModal.setAppElement('#root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter><App/></BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}